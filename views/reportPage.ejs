<%- include('./partials/header'); -%>

<%- include('./partials/leftSideNavbar'); -%>

<%- include('./partials/topNavbar'); -%>


<!-- Card Details -->
<div class="card" style="width: 65em;">
<div class="card-body">

</br>

<!-- Section 2 - Review and Expense Pie Charts -->
<div class="container">
<h3>Revenue and Expenses</h3>
</br>
<div id="canvas-holder graph-one" style="width:50%;float:left">
    <canvas id="chart-area-1"></canvas>
</div>

<div id="canvas-holder graph-two" style="width:50%;float:right;">
    <canvas id="chart-area-2"></canvas>
</div>
</div>

</br>
<hr>
</br>

<!-- Section 3 - Transaction History -->
<h3 id="transaction-title">Transaction History</h3>
<button type="button" class="btn btn-outline-primary">Display Revenue</button>
<button type="button" class="btn btn-primary">Display Expenses</button>

<table class="table">
    <thead>
        <tr>
            <th scope="row"></th>
            <th>Flag</th>
            <th>Date</th>
            <th>Description</th>
            <th>Category</th>
            <th>Project</th>
            <th>Amount</th>
            <th>Verified ID</th>
        </tr>
    </thead>
    <!-- hard coded for org 0 with project 0 -->
    <% for(let i=0; i < bankData[0].projects[0].getTxs().length; i++) {%>
    <tbody>
        <tr>
            <th scope="row"></th>
            <td><a href='/flag1'><img src="flag.png" width="60px;"></a></td>
            <td><%= bankData[0].projects[0].getTxs()[i].originationDateTime%></td>
            <td><%= bankData[0].projects[0].getTxs()[i].description%></td>
            <td><%= bankData[0].projects[0].getTxs()[i].categoryTags[0]%></td>
            <td>Daily Living Project</td>
            <td><%= bankData[0].projects[0].getTxs()[i].currencyAmount%></td>
            <td><%= bankData[0].projects[0].getTxs()[i].id%></td>
        </tr>
    </tbody>
    <% } %>
</table>


</div>
</div>

<script>
    var randomScalingFactor = function () {
        return Math.round(Math.random() * 100);
    };

    function countTotalCostPerStore(orgData,orgIndex,projectIndex){
        let uniqueDescriptions=[];
        let dollarCounts=[];
        orgData[orgIndex].projects[projectIndex].txs.forEach(tx=>{
            if(!uniqueDescriptions.includes(tx.description)){ //first time
                uniqueDescriptions.push(tx.description);
                dollarCounts.push(tx.currencyAmount)
            }else{ //other
                dollarCounts[uniqueDescriptions.indexOf(tx.description)]+= tx.currencyAmount;
            }
        })
        return { uniqueDescriptions: uniqueDescriptions, dollarCounts: dollarCounts}
    }

    window.onload = function () {
    fetch('/getOrgData')
        .then((res) => res.json())
                .then((data) => {
            //note, you should pass the CURRENT ACTIVE ORG and project, not the hardcoded
            let totalCounts =  countTotalCostPerStore(data.orgData,0,0);
            
            //dummy data
            var config1 = {
                type: 'doughnut',
                data: {
                    datasets: [{
                        data: [
                            8,
                            15,
                            35,
                            20,
                            20,
                        ],
                        backgroundColor: [
                            window.chartColors.red,
                            window.chartColors.purple,
                            window.chartColors.green,
                            window.chartColors.blue,
                            window.chartColors.orange,
                        ]
                    }],
                    labels: [
                        'Programming Fees',
                        'Government Grants',
                        'Corporate Contributions',
                        'Donations from Public',
                        'Sponsorships'
                    ]
                },
                options: {
                    title: {
                        display: true,
                        text: 'Revenue'
                    },
                    legend: {
                        display: false
                    },
                    tooltips: {
                        callbacks: {
                            label: function (tooltipItem, data) {
                                return data['labels'][tooltipItem['index']] + ': ' + data['datasets'][0]['data'][tooltipItem['index']] + '%';
                            }
                        }
                    }
                }
            };


            var config2 = {
                type: 'doughnut',
                data: {
                    datasets: [{
                        data: totalCounts.dollarCounts,
                        backgroundColor: [
                            window.chartColors.red,
                            window.chartColors.purple,
                            window.chartColors.green,
                            window.chartColors.blue,
                            window.chartColors.orange,
                            window.chartColors.yellow,
                            window.chartColors.red,
                            window.chartColors.purple,
                            window.chartColors.green,
                            window.chartColors.blue,
                            window.chartColors.orange,
                            window.chartColors.yellow,
                            window.chartColors.red,
                            window.chartColors.purple,
                            window.chartColors.green,
                            window.chartColors.blue,
                            window.chartColors.orange,
                            window.chartColors.yellow,
                            window.chartColors.red,
                            window.chartColors.purple,
                            window.chartColors.green,
                            window.chartColors.blue,
                            window.chartColors.orange,
                            window.chartColors.yellow,                         
                        ]

                    }],
                    labels: totalCounts.uniqueDescriptions
                },
                options: {
                    legend: {
                        display: false
                    },
                    title: {
                        display: true,
                        text: 'Expenses'
                    }
                }
            };

            var ctx = document.getElementById('chart-area-1').getContext('2d');
            window.myDoughnut = new Chart(ctx, config1);
            var ctx = document.getElementById('chart-area-2').getContext('2d');
            window.myDoughnut = new Chart(ctx, config2);


        });



    };

</script>


   
</body>
</html>